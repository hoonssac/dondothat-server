<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.bbagisix.asset.mapper.AssetMapper">

    <!-- ResultMap 정의 - 암호화 필드들에 TypeHandler 적용 -->
    <resultMap id="AssetResultMap" type="org.bbagisix.asset.domain.AssetVO">
        <id property="assetId" column="asset_id"/>
        <result property="userId" column="user_id"/>
        <result property="assetName" column="asset_name"/>
        <result property="bankName" column="bank_name"/>

        <!-- 암호화 필드들 - AES TypeHandler -->
        <result property="bankAccount" column="bank_account"
                typeHandler="org.bbagisix.asset.encryption.AESEncryptedTypeHandler"/>
        <result property="bankId" column="bank_id"
                typeHandler="org.bbagisix.asset.encryption.AESEncryptedTypeHandler"/>
        <result property="connectedId" column="connected_id"
                typeHandler="org.bbagisix.asset.encryption.AESEncryptedTypeHandler"/>

        <!-- 은행 비밀번호 - AES TypeHandler -->
        <result property="bankPw" column="bank_pw"
                typeHandler="org.bbagisix.asset.encryption.AESEncryptedTypeHandler"/>

        <result property="balance" column="balance"/>
        <result property="createdAt" column="created_at"/>
        <result property="status" column="status"/>
    </resultMap>

    <insert id="insertUserAsset" parameterType="org.bbagisix.asset.domain.AssetVO">
        INSERT INTO user_asset (user_id,
                                asset_name,
                                bank_name,
                                bank_account,
                                bank_id,
                                bank_pw,
                                connected_id,
                                balance,
                                created_at,
                                status)
        VALUES (#{userId},
                #{assetName},
                #{bankName},
                #{bankAccount, typeHandler=org.bbagisix.asset.encryption.AESEncryptedTypeHandler},
                #{bankId, typeHandler=org.bbagisix.asset.encryption.AESEncryptedTypeHandler},
                #{bankPw, typeHandler=org.bbagisix.asset.encryption.AESEncryptedTypeHandler},
                #{connectedId, typeHandler=org.bbagisix.asset.encryption.AESEncryptedTypeHandler},
                #{balance},
                NOW(),
                #{status})
    </insert>

    <select id="selectAssetByUserIdAndStatus" resultMap="AssetResultMap">
        select asset_id,
               user_id,
               asset_name,
               bank_name,
               bank_account,
               bank_id,
               bank_pw,
               connected_id,
               balance,
               created_at,
               status
        from user_asset
        where user_id = #{userId}
          AND status = #{status}
    </select>

    <select id="selectAssetById" resultMap="AssetResultMap">
        select
            asset_id,
            user_id,
            asset_name,
            bank_name,
            bank_account,
            bank_id,
            bank_pw,
            connected_id,
            balance,
            created_at,
            status
        from user_asset
        where asset_id = #{assetId}
    </select>

    <delete id="deleteUserAssetByUserIdAndStatus">
        delete
        from user_asset
        where user_id = #{userId}
          AND status = #{status}
    </delete>

    <delete id="deleteExpensesByUserId">
        DELETE
        FROM expenditure
        WHERE asset_id IN (SELECT asset_id
                           FROM user_asset
                           WHERE user_id = #{userId})
    </delete>

    <!-- 모든 main 계좌 조회 -->
    <select id="selectAllMainAssets" resultMap="AssetResultMap">
        SELECT asset_id,
               user_id,
               asset_name,
               bank_name,
               bank_account,
               bank_id,
               bank_pw,
               connected_id,
               balance,
               created_at,
               status
        FROM user_asset
        WHERE status = 'main'
          AND connected_id IS NOT NULL
        ORDER BY user_id, created_at
    </select>

    <!-- 계좌 잔액 업데이트 -->
    <update id="updateAssetBalance">
        UPDATE user_asset
        SET balance = #{newBalance}
        WHERE asset_id = #{assetId}
    </update>

    <!--  중복 거래내역 개수 조회 -->
    <select id="countDuplicateTransaction" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM expenditure
        WHERE user_id = #{userId}
          AND asset_id = #{assetId}
          AND amount = #{amount}
          AND description = #{description}
          AND DATE_FORMAT(expenditure_date, '%Y-%m-%d %H:%i') = DATE_FORMAT(#{expenditureDate}, '%Y-%m-%d %H:%i')
    </select>

    <!-- 저금통 계좌 잔액 업데이트 (동시성 문제 때문에 따로 만듦) -->
    <update id="updateSavingAssetBalance">
        UPDATE user_asset
        SET balance=balance + #{totalSaving}
        WHERE asset_id = #{assetId}
    </update>

</mapper>
