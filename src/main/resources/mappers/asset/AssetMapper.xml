<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.bbagisix.asset.mapper.AssetMapper">

    <!-- ResultMap 정의 - 암호화 필드들에 TypeHandler 적용 -->
    <resultMap id="AssetResultMap" type="org.bbagisix.asset.domain.AssetVO">
        <id property="assetId" column="asset_id"/>
        <result property="userId" column="user_id"/>
        <result property="assetName" column="asset_name"/>
        <result property="bankName" column="bank_name"/>

        <!-- 암호화 필드들 - AES TypeHandler -->
        <result property="bankAccount" column="bank_account"
                typeHandler="org.bbagisix.asset.encryption.AESEncryptedTypeHandler"/>
        <result property="bankId" column="bank_id"
                typeHandler="org.bbagisix.asset.encryption.AESEncryptedTypeHandler"/>
        <result property="connectedId" column="connected_id"
                typeHandler="org.bbagisix.asset.encryption.AESEncryptedTypeHandler"/>

        <!-- 은행 비밀번호 - AES TypeHandler -->
        <result property="bankPw" column="bank_pw"
                typeHandler="org.bbagisix.asset.encryption.AESEncryptedTypeHandler"/>

        <result property="balance" column="balance"/>
        <result property="createdAt" column="created_at"/>
        <result property="status" column="status"/>
    </resultMap>

    <insert id="insertUserAsset" parameterType="org.bbagisix.asset.domain.AssetVO">
        INSERT INTO user_asset (
            user_id,
            asset_name,
            bank_name,
            bank_account,
            bank_id,
            bank_pw,
            connected_id,
            balance,
            created_at,
            status

        ) VALUES (
                     #{userId},
                     #{assetName},
                     #{bankName},
                     #{bankAccount, typeHandler=org.bbagisix.asset.encryption.AESEncryptedTypeHandler},
                     #{bankId, typeHandler=org.bbagisix.asset.encryption.AESEncryptedTypeHandler},
                     #{bankPw, typeHandler=org.bbagisix.asset.encryption.AESEncryptedTypeHandler},
                     #{connectedId, typeHandler=org.bbagisix.asset.encryption.AESEncryptedTypeHandler},
                     #{balance},
                     NOW(),
                     #{status}
                 )
    </insert>

    <select id="selectAssetByUserIdAndStatus" resultMap="AssetResultMap">
        select
            asset_id,
            user_id,
            asset_name,
            bank_name,
            bank_account,
            bank_id,
            bank_pw,
            connected_id,
            balance,
            created_at,
            status
        from user_asset
        where user_id = #{userId}
          AND status = #{status}
    </select>

    <delete id="deleteUserAssetByUserIdAndStatus">
        delete from user_asset
        where user_id = #{userId}
        AND status = #{status}
    </delete>

    <!-- expense 쪽에 넣어야 할 것   -->
    <delete id="deleteExpensesByUserId">
        DELETE FROM expenditure
        WHERE asset_id IN (
            SELECT asset_id FROM user_asset WHERE user_id = #{userId}
        )
    </delete>

    <insert id="insertExpenses" parameterType="java.util.List">
        INSERT INTO expenditure (
        user_id,
        asset_id,
        category_id,
        amount,
        description,
        expenditure_date,
        created_at
        ) VALUES
        <foreach collection="list" item="expense" separator=",">
            (
            #{expense.userId},
            #{expense.assetId},
            #{expense.categoryId},
            #{expense.amount},
            #{expense.description},
            #{expense.expenditureDate},
            NOW()
            )
        </foreach>
    </insert>

    <!-- 모든 main 계좌 조회 -->
    <select id="selectAllMainAssets" resultType="org.bbagisix.asset.domain.AssetVO">
        SELECT
            asset_id,
            user_id,
            asset_name,
            bank_name,
            bank_account,
            bank_id,
            bank_pw,
            connected_id,
            balance,
            created_at,
            status
        FROM user_asset
        WHERE status = 'main'
          AND connected_id IS NOT NULL
        ORDER BY user_id, created_at
    </select>

    <!-- 계좌 잔액 업데이트 -->
    <update id="updateAssetBalance">
        UPDATE user_asset
        SET balance = #{balance},
            updated_at = NOW()
        WHERE asset_id = #{assetId}
    </update>

    <!--  중복 거래내역 개수 조회 -->
    <select id="countDuplicateTransaction" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM expenditure
        WHERE user_id = #{userId}
          AND asset_id = #{assetId}
          AND amount = #{amount}
          AND description = #{description}
          AND DATE_FORMAT(expenditure_date, '%Y-%m-%d %H:%i') = DATE_FORMAT(#{expenditureDate}, '%Y-%m-%d %H:%i')
    </select>

</mapper>
